syntax = "proto3";

option go_package = "micro/learn1/test17/proto";

package proto;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// 一套简单的图书馆管理系统
service Bookstore {

    // 返回书架中的所有图书列表
    rpc ListShelves(google.protobuf.Empty) returns (ListShelvesResponse){
        option (google.api.http) = {
            get: "/v1/shelves"
        };
    }

    // 创建新的书架
    rpc CreateShelf(CreateShelfRequest) returns (Shelf){
        option (google.api.http) = {
            post: "/v1/shelves"
            body: "shelf"
        };
    }

    // 查找一个指定的书架
    rpc GetShelf(GetShelfRequest) returns (Shelf){
        option (google.api.http) = {
            get: "/v1/shelves/{shelf}"
        };
    }

    // 删除一个指定的书架
    rpc DeleteShelf(DeleteShelfRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/v1/shelves/{shelf}"
        };
    }

    // 返回图书列表
    rpc ListBook(ListBookRequest) returns (ListBookResponse){
        option (google.api.http) = {
            get: "/v1/shelves/{shelf}/books"
        };
    }

    // 添加图书
    rpc CreateBook(CreateBookRequest) returns (Book){
        option (google.api.http) = {
            post: "/v1/shelves/{shelf}/books"
            body: "book"
        };
    }

    // 获取指定id 的图书
    rpc GetBook(GetBookRequest) returns (Book){
        option (google.api.http) = {
            get: "/v1/shelves/{shelf}/books/{book}"
        };
    }

    // 移除指定id 的图书
    rpc DeleteBook(DeleteBookRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/v1/shelves/{shelf}/books/{book}"
        };
    }
}

// 书架和书
message Shelf {
    int64  id = 1;
    string theme = 2;
    int64  size = 3;
}

message Book {
    int64  ID = 1;
    string author = 2;
    string title = 3;
}

// 请求和响应
// 这里 repeated 应该表示可以返回 Shelf 的切片类型
message ListShelvesResponse {
    repeated Shelf shelves = 1;
}

message CreateShelfRequest {
    Shelf shelf = 1;
}

message GetShelfRequest {
    int64 shelf = 1;
}

message DeleteShelfRequest {
    int64 shelf = 1;
}

message ListBookRequest {
    int64 shelf = 1;
    string page_token = 2;
}

message ListBookResponse {
    repeated Book books = 1;
    string next_page_token = 2;
}

message CreateBookRequest {
    int64 shelf = 1;
    Book book = 2;
}

message GetBookRequest {
    int64 shelf = 1;
    int64 book = 2;
}

message DeleteBookRequest {
    int64 shelf = 1;
    int64 book = 2;
}